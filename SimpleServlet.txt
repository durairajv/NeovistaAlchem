package wasdev.sample.servlet;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter ;
import java.io.Writer;
import java.util.ArrayList;
import java.util.List;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;



/**
 * Servlet implementation class SimpleServlet
 */
@WebServlet("/SimpleServlet")
public class SimpleServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        System.out.println("Entering inside the servlet1");
        
        System.out.println("http://gateway-a.watsonplatform.net/calls/url/URLGetTextSentiment?apikey=f77f3deb4aed584bd88439da61ee9372f597e088&url=http://www.cnn.com/2009/CRIME/01/13/missing.pilot/index.html");
       
       
      /** HttpClient client = new DefaultHttpClient();
        HttpPost post = new HttpPost("http://gateway-a.watsonplatform.net/calls/url/URLGetTextSentiment");
        System.out.println("After url set in Post");
  		List nameValuePairs = new ArrayList(1);

  		//nameValuePairs.add(new BasicNameValuePair('name', 'value')); //you can as many name value pair as you want in the list.
  		nameValuePairs.add(new BasicNameValuePair("apikey", "f77f3deb4aed584bd88439da61ee9372f597e088")); 
  		nameValuePairs.add(new BasicNameValuePair("url", "http://www.cnn.com/2009/CRIME/01/13/missing.pilot/index.html")); 
  		 System.out.println("After setting vales Post");	
        
  		post.setEntity(new UrlEncodedFormEntity(nameValuePairs));
  		HttpResponse response = client.execute(post);
  		  		 System.out.println("After executing  Post");	
  		BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
  		String line = " ";
  		while ((line = rd.readLine()) != null) 
  		{
   		 System.out.println(line);

  		} */
  		
  		 try {

		URL url = new URL("http://gateway-a.watsonplatform.net/calls/url/URLGetTextSentiment");
		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		conn.setDoOutput(true);
		conn.setRequestMethod("POST");
		//conn.setRequestProperty("Content-Type", "application/json");
		conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");

		//String input = "{\"apikey\":f77f3deb4aed584bd88439da61ee9372f597e088,\"url\":\"http://www.cnn.com/2009/CRIME/01/13/missing.pilot/index.html\"}";

		//OutputStream os = conn.getOutputStream();
		//os.write(input.getBytes());
		//os.flush();
		
		String[] paramName = new String[2];
		String[] paramVal  = new String[2];
		paramName[0] ="apikey";
		paramName[1] ="url";
		paramVal[0]="f77f3deb4aed584bd88439da61ee9372f597e088";
		paramVal[1]= "http://www.cnn.com/2009/CRIME/01/13/missing.pilot/index.html";
		
		
		// Create the form content
       OutputStream out = conn.getOutputStream();
       Writer writer = new OutputStreamWriter(out, "UTF-8");
      for (int i = 0; i < paramName.length; i++) {
       writer.write(paramName[i]);
       writer.write("=");
       writer.write(URLEncoder.encode(paramVal[i], "UTF-8"));
       writer.write("&");
       }
  writer.close();
  out.close();

		if (conn.getResponseCode() != HttpURLConnection.HTTP_OK) {
			throw new RuntimeException("Failed : HTTP error code : "
				+ conn.getResponseCode());
		}

		BufferedReader br = new BufferedReader(new InputStreamReader(
				(conn.getInputStream())));

		String output;
		System.out.println("Output from Server .... \n");
		while ((output = br.readLine()) != null) {
			System.out.println(output);
		}

		conn.disconnect();

	  } catch (MalformedURLException e) {

		e.printStackTrace();

	  } catch (IOException e) {

		e.printStackTrace();

	 }

	

  		

        
        
        response.setContentType("text/html");
        response.getWriter().print("Hello Alchemy API");
        
    }

}
